#include <CapacitiveSensor.h>
#include <LedControl.h>

int DIN = 10;
int CS = 9;
int CLK = 8;

byte a[8] = {
    0x3C,
    0x66,
    0xC3,
    0xC3,
    0xFF,
    0xC3,
    0xC3,
    0xC3,
};

byte b[8] = {
    0xFE,
    0xC1,
    0xC1,
    0xFE,
    0xFE,
    0xC1,
    0xC1,
    0xFE,
};

byte heart[8] = {
    0x0,
    0x66,
    0xFF,
    0xFF,
    0xFF,
    0x7E,
    0x3C,
    0x18,
};

byte y[8] = {
    0xC3,
    0x66,
    0x3C,
    0x18,
    0x18,
    0x18,
    0x18,
    0x18,
};

byte n[8] = {

    0xC3,
    0xE3,
    0xF3,
    0xDB,
    0xCF,
    0xC7,
    0xC3,
    0xC3,
};

byte o[8] = {

    0x3C,
    0x7E,
    0x66,
    0x66,
    0x66,
    0x66,
    0x7E,
    0x3C,
};

byte w[8] = {

    0xC3,
    0xC3,
    0xC3,
    0xDB,
    0xDB,
    0xFF,
    0xE7,
    0xC3,
};

byte m[8] = {
    0xC3,
    0xE7,
    0xFF,
    0xDB,
    0xC3,
    0xC3,
    0xC3,
    0xC3,
};

byte r[8] = {
    0x0,
    0x78,
    0x44,
    0x44,
    0x78,
    0x50,
    0x48,
    0x44,
};

byte R[8] = {
    0xFF,
    0xFF,
    0xC1,
    0xFF,
    0xFF,
    0xFC,
    0xDE,
    0xCF,
};

byte e[8] = {
    0xFF,
    0xFF,
    0xC0,
    0xFF,
    0xFF,
    0xC0,
    0xFF,
    0xFF,
};

byte x[8] = {
    0xC3,
    0x66,
    0x3C,
    0x18,
    0x18,
    0x3C,
    0x66,
    0xC3,
};

byte IdlePattern[8] = {
    0xC3,
    0xC3,
    0x00,
    0x00,
    0x00,
    0x00,
    0xC3,
    0xC3,
};

// pin 4 sends electrical energy
// pin 2 senses a change

CapacitiveSensor capSensor1 = CapacitiveSensor(4, 2);

// thresholds for turning the lamp on
int threshold0 = 100;
int threshold1 = 130;
int threshold2 = 500

;

LedControl lc = LedControl(DIN, CLK, CS, 0);

void setup() {
    // open a serial connection

    Serial.begin(9600);

    // <------ 1. Initialize components ------>
    lc.shutdown(0, false);  // The MAX72XX is in power-saving mode on startup
    lc.setIntensity(0, 15);  // Set the brightness to maximum value
    lc.clearDisplay(0);  // and clear the display
}

void loop() {
    // store the value reported by the sensor in a variable
    long sensorValue1 = capSensor1.capacitiveSensor(90);

    // print out the sensor value
    Serial.print("sensor1 value: ");
    Serial.println(sensorValue1);

    if (sensorValue1 > threshold0 && sensorValue1 < threshold1) {
        printByte(n);

        delay(1000);

        printByte(o);

        delay(1000);

        printByte(w);

        delay(1000);

        printByte(a);

        delay(1000);

        printByte(y);

        delay(2000);

        printByte(heart);

        delay(3000);

    } else if (sensorValue1 > threshold1 && sensorValue1 < threshold2) {
        printByte(m);

        delay(1000);

        printByte(a);

        delay(1000);

        printByte(y);

        delay(1000);

        printByte(b);

        delay(1000);

        printByte(e);

        delay(1000);

        printByte(b);

        delay(1000);

        printByte(a);

        delay(1000);

        printByte(b);

        delay(1000);

        printByte(y);

        delay(1000);

        printByte(heart);

        delay(3000);

    } else if (sensorValue1 > threshold2) {
        printByte(m);

        delay(1000);

        printByte(a);

        delay(1000);

        printByte(R);

        delay(1000);

        printByte(r);

        delay(1000);

        printByte(y);

        delay(1000);

        printByte(m);

        delay(1000);

        printByte(e);

        delay(2000);

        printByte(heart);

        delay(3000);

    }

    else {
        // if none of the values are greater than the threshold
        printByte(IdlePattern);
    }

    delay(10);
}

void printByte(byte character[]) {
    int i = 0;

    for (i = 0; i < 8; i++) {
        lc.setRow(0, i, character[i]);
    }
}



